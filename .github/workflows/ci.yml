name: Docker Image CI
on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 0 * * *
jobs:
  copy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 'v1.23.2' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set variables
        id: vars
        run: |
          echo "repository=${GITHUB_ACTOR}/$(basename ${GITHUB_REPOSITORY})" >> $GITHUB_OUTPUT
          echo "origin_repo=gcr.io/kaniko-project/executor" >> $GITHUB_OUTPUT
      - name: Install Skopeo
        run: |
          sudo apt-get -y update
          sudo apt-get -y install skopeo
          skopeo -v
      - name: Skopeo login
        run: |
          skopeo login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }} docker.io
      - name: Skopeo copy (executor)
        run: |
          skopeo copy --multi-arch all docker://${{ steps.vars.outputs.origin_repo }}:${{ matrix.version }} docker://${{ steps.vars.outputs.repository }}:${{ matrix.version }}
          skopeo copy --multi-arch all docker://${{ steps.vars.outputs.origin_repo }}:latest docker://${{ steps.vars.outputs.repository }}:latest
      - name: Skopeo copy (executor-debug)
        run: |
          skopeo copy --multi-arch all docker://${{ steps.vars.outputs.origin_repo }}:${{ matrix.version }}-debug docker://${{ steps.vars.outputs.repository }}:${{ matrix.version }}-debug
      - name: Skopeo copy (executor-slim)
        run: |
          skopeo copy --multi-arch all docker://${{ steps.vars.outputs.origin_repo }}:${{ matrix.version }}-slim docker://${{ steps.vars.outputs.repository }}:${{ matrix.version }}-slim
